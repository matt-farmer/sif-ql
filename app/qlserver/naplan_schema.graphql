
## Reason why sitting test was interrupted
type TestDisruption {
	## the disruption event description
	Event: String
}

## Adjustments for the student in this event
type Adjustment {
	## List of PNP codes applied to this student
	PNPCodeList: [String]
	## Booklet type requirement for this student
	BookletType: String
}

## A NAP Testing event
type NAPEvent {
	## RefID of the Event
	EventID: String
	## RefID of student who particpated in event
	SPRefID: String
	## Platform ID of the student
	PSI: String
	## RefID for the SchoolInfo
	SchoolRefID: String
	## ACARA ASL id for the school
	SchoolID: String
	## RefID for the Test
	TestID: String
	## Local Name or ID for the Test
	NAPTestLocalID: String
	## Sector indicator for School
	SchoolSector: String
	## School System (gov, non-gov etc.)
	System: String
	## Regional, Metro etc.
	SchoolGeolocation: String
	## School reporting data should be returned to
	ReportingSchoolName: String
	## Jurisdictional Event ID
	JurisdictionID: String
	## Present, Absent, Withdrawn etc.
	ParticipationCode: String
	## Text explanation of participation code
	ParticipationText: String
	## Device test was taken on
	Device: String
	## Date of test event
	Date: String
	## Timecode for start of test
	StartTime: String
	## Timecode for user test duration
	LapsedTimeTest: String
	## Text description of reason why student exempted
	ExemptionReason: String
	## Flags whether personal detials were updated within AD platform
	PersonalDetailsChanged: String
	## Flags if this may be a duplicate of another user
	PossibleDuplicate: String
	## Date of Birth range
	DOBRange: String
	## List of test disruptions for this event/student
	TestDisruptionList: [TestDisruption]
	## List of adjustments for this event/student
	Adjustment: Adjustment
}

## All NAPLAN Test results data for a given school
type School {
	## Test events this school's students participated in
	## onlyDisruptions: set to true to see only events that were disrupted
	events(onlyDisruptions: Boolean): [NAPEvent]
	## The student responses from this school
	responses: [NAPResponseSet]
	## Students at this school
	students: [RegistrationRecord]
	## summary of scores for school
	score_summaries: [ScoreSummary]
}

## Retrieve NAPLAN results data for this school
type NaplanQuery {
	## Query to access school-level NAPLAN info: Events, Responses, ScoreSummaries etc.
	getSchoolData(acaraIDs: [String]!): [School]
}

## Student Responses to Test Questions
type NAPResponseSet {
	## RefID for this Response
	ResponseID: String
	## These responses not to be included in published reports if true
	ReportExclusionFlag: String
	## Responses are part of ACARA Calibration sample
	CalibrationSampleFlag: String 
	## Responses are part of Equating sample
	EquatingSampleFlag: String 
	## Text description of student testlet path taken
	PathTakenForDomain: String 
	## Indicates this was parrllel test
	ParallelTest: String 
	## RefID for Student
	StudentID: String 
	## Platform ID for Student
	PSI: String 
	## RefID for the Test these responses came from
	TestID: String 
	## Local (jurisdiction) name for the test
	TestLocalID: String 
	## Detailed scoring breakdown for the test domain of this responses
	DomainScore: DomainScore
	## Testlets answered by this student
	TestletList: [NAPResponseSet_Testlet]
}

## Testlet taken by this student
type NAPResponseSet_Testlet {
	## Guid for the source testlet in codeframe
	NapTestletRefId: String 
	## local name for testlet
	NapTestletLocalId: String
	## score for this testlet 
	TestletScore: String
	## Responses to each of the items the testlet contains
	ItemResponseList: [NAPResponseSet_ItemResponse]
}

## Item-level responses within a testlet
type NAPResponseSet_ItemResponse {
	## the refid of the item in the code-frame
	ItemRefID: String 
	## The referenced Test Item
	Item: NAPTestItem
	## the local id for the item
	LocalID: String 
	## the student's response
	Response: String 
	## Correct or Incorrect
	ResponseCorrectness: String 
	## Item score
	Score: String
	## student duration on item 
	LapsedTimeItem: String 
	## ordering no. for item
	SequenceNumber: String 
	## weighting / importance
	ItemWeight: String 
	## sub-scores eg. for subcomponents of writing
	SubscoreList: [NAPResponseSet_Subscore]
}

## Test Item Container
type NAPTestItem {
	## The RefID of the Test Item
	ItemID: String
	## The details about the test item
	TestItemContent: TestItemContent
}

## Test Item Details
type TestItemContent {
	## Local system id for this item
	NAPTestItemLocalId: String 
	## The name of the item
	ItemName: String 
	## the Type of the item
	ItemType: String 
	## Subdomain item applies to
	Subdomain: String 
	## Writing Genre
	WritingGenre: String 
	## The item Descriptor
	ItemDescriptor: String
	## Was this item released 
	ReleasedStatus: String 
	## What sort of marking for this item; machine/human
	MarkingType: String 
	## No. of mc options available
	MultipleChoiceOptionCount: String 
	## The correct answer for this item
	CorrectAnswer: String 
	## Max score available for this item
	MaximumScore: String 
	## Difficulty
	ItemDifficulty: String 
	## DiffLogit 5
	ItemDifficultyLogit5: String 
	## DiffLogit 62
	ItemDifficultyLogit62: String 
	## DiffLogit 5SE
	ItemDifficultyLogit5SE: String 
	## DiffLogit 62SE
	ItemDifficultyLogit62SE: String 
	## Proficiency Band for item
	ItemProficiencyBand: String 
	## Proficiency Level for item
	ItemProficiencyLevel: String 
	## URL for exemplar, remote system 
	ExemplarURL: String 
}


## Detailed subscores for domains such as writing
type NAPResponseSet_Subscore {
	## name of subscore
	SubscoreType: String
	## score for this sub-component
	SubscoreValue: String
}

## Detailed scoring breakdown for the test domain of this responses
type DomainScore {
	## Raw score, unsclaed		
	RawScore: String 
	## Scaled score
	ScaledScoreValue: String 
	## Scaled score logit
	ScaledScoreLogitValue: String 
	## Std. Err for Scaled Score
	ScaledScoreStandardError: String 
	## Sclaed Score Logit
	ScaledScoreLogitStandardError: String 
	## Band allocated to student based on score
	StudentDomainBand: String 
	## Proficiency of student
	StudentProficiency: String
	## Plausible values list for this domain 
	PlausibleScaledValueList: [String]
}

## Student Personal information
type RegistrationRecord {
	## SIF GuID for this record
	RefId: String 
	## Local ID of student
	LocalId: String 
	## State/Province ID of student
	StateProvinceId: String 
	## Key-Value list of all ids associated with student, including past/present variants
	OtherIdList: [XMLAttributeStruct]
	## Family Name, surname of student
	FamilyName: String 
	## Given Name of Student
	GivenName: String 
	## Middle Name of Student
	MiddleName: String 
	## Name student preferes to be known by
	PreferredName: String 
	## Ind. Status indicator
	IndigenousStatus: String
	## Male/Female/Other 
	Sex: String 
	## Date of Birth
	BirthDate: String
	## Country of Birth 
	CountryOfBirth: String 
	## Student Language Other than English
	StudentLOTE: String 
	## Student's current visa code
	VisaCode: String 
	## Langauage Background Other than English
	LBOTE: String 
	## Address
	AddressLine1: String 
	## Address
	AddressLine2: String 
	## Region etc.
	Locality: String 
	## State or Territory
	StateTerritory: String
	## Student's postcode 
	Postcode: String 
	## Local identifier (non-ASL) for student's school
	SchoolLocalId: String 
	## Student year level
	YearLevel: String 
	## Time fraction for attendance
	FTE: String 
	## Parent 1 Language other Than English
	Parent1LOTE: String 
	## Parent 2 Language other Than English
	Parent2LOTE: String 
	## Parent 1 occupation category
	Parent1Occupation: String 
	## Parent 2 occupation category
	Parent2Occupation: String 
	## Parent 1 Educational background classifier
	Parent1SchoolEducation: String 
	## Parent 2 Educational background classifier
	Parent2SchoolEducation: String 
	## Parent 1 post/non-school Educational background classifier
	Parent1NonSchoolEducation: String 
	## Parent 2 post/non-school Educational background classifier
	Parent2NonSchoolEducation: String 
	## Local id (non-ASL) of school campus
	LocalCampusId: String 
	## ACARA ASL Id of School
	ASLSchoolId: String 
	## Test level (3,5,7,9) for this student
	TestLevel: String 
	## Student homegroup name
	Homegroup: String 
	## Student class-group name
	ClassGroup: String 
	## Flag indicates this is student's main school
	MainSchoolFlag: String 
	## FFPOS
	FFPOS: String 
	## ACARA ASL Id of school reports should be returned to
	ReportingSchoolId: String 
	## ACARA ASL Id of other school student is associated with
	OtherSchoolId: String 
	## Does student require educational support
	EducationSupport: String 
	## Is student home-schooled
	HomeSchooledStudent: String
	## Flag indicates sensitive handling reqiuired of student information  
	Sensitive: String 
	## Student took test using offline delivery
	OfflineDelivery: String 
	# Catholic sector id, ingest only in results reporting use otherid list
	# DiocesanId: String 
	# Jurisdiction id, ingest only in results reporting use otherid list
	# JurisdictionId: String 
	# National id, ingest only in results reporting use otherid list
	# NationalId: String 
	# Other id, ingest only in results reporting use otherid list
	# OtherId: String 
	# PlatformId: String 
	# Catholic sector id, ingest only in results reporting use otherid list
	# PreviousDiocesanId: String 
	# Jurisdiction id, ingest only in results reporting use otherid list
	# PreviousLocalId: String 
	# National id, ingest only in results reporting use otherid list
	# PreviousNationalId: String 
	# Other id, ingest only in results reporting use otherid list
	# PreviousOtherId: String 
	# PSI, ingest only in results reporting use otherid list
	# PreviousPlatformId: String 
	# Sector id, ingest only in results reporting use otherid list
	# PreviousSectorId: String 
	# State id, ingest only in results reporting use otherid list
	# PreviousStateProvinceId: String 
	# TAA id, ingest only in results reporting use otherid list
	# PreviousTAAId: String 
	# Sector id, ingest only in results reporting use otherid list
	# SectorId: String 
	# TAA id, ingest only in results reporting use otherid list
	# TAAId: String 
}

## key-value pairs for other ids
type XMLAttributeStruct {
	## other id name
	Type: String
	## other id value
	Value: String
}

type ScoreSummary {
	## The Refid of this score summary
	SummaryID: String 
	## The RefID of the school this summary refers to
	SchoolInfoRefId: String
	## The ACARA ASL Id of the school
	SchoolACARAId: String
	## The NAPLAN Test this summary is for
	NAPTestRefId: String
	## Local name/id for this NAPLAN test
	NAPTestLocalId: String
	## The natioanl average school score for this test domain
	DomainNationalAverage: String
	## The averaged school score for this test domain
	DomainSchoolAverage: String
	## The jurusdictions average school score for this test domain
	DomainJurisdictionAverage: String
	## Top national 60th percentile average school score for this test domain
	DomainTopNational60Percent: String
	## Bottom national 60th percentile average school score for this test domain
	DomainBottomNational60Percent: String
}

# type SchoolInfo {	
# }





	